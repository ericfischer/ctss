FIBMON    R     THE FIB MONITOR.
          R          3/10/66 - NOEL I. MORRIS
          R
          R
          R     THIS COMMAND MAY BE ISSUED ONLY BY USER 1.
          R
          R     PARAMETERS ARE AS FOLLOWS -
          R
          R     0  -  LOOK FOR NEXT JOB, IF ANY
          R     1  -  USER ALREADY LOGGED IN, TRY AGAIN LATER
          R     2  -  USER CANNOT BE LOGGED IN.
          R     3  -  SUCCESSFUL LOGIN, REMOVE JOB FROM FILE.
          R
          R
           N'R
           B'N TSTRUN.
           D'N INFO (4), BUFF1 (431), BUFF2 (431), CARD (14)
           V'S CARD (14) = 777777777777K
          R
          R     PRESET DECLARATIONS.
          R
           V'S  C0056 = $ C0056$
           V'S FBPROG = $ 99995$
           V'S FIBJOB = $FIBJOB$
           V'S   FILE = $  FILE$
           V'S      R = $R$
           V'S     RW = $RW$
           V'S    MZE = -0
           V'S    ALL = $ALL$
           V'S  FENCE = 777777777777K
           V'S SLEEPT = 600
           V'S     CT = 0
          R
           V'S LGNFIB = $ LOGIN$, 0, 0, 0, 0,
          1     777777777777K
           V'S FIBM3 = $FIBMON     3$,
          1     777777777777K
           V'S RUNCOM = $RUNCOM$, 0,
          1     777777777777K
          R
          R
          R     GET ARGUMENT AND CHECK VALIDITY.
          R
           LUN = GLOC.(COMLOC.($USER$))
           W'R LUN .NE. 1, T'O NOT1
          R
           WHOAMI. (INFO (4) ... 5)
           LGNFIB = INFO
          R
           ARG = COMARG. (1)
           W'R ARG .E. FENCE, T'O NOT1
           ARG = BCDEC. (ARG)
           W'R ARG .L. 0 .OR. ARG .G. 3, T'O NOT1
           W'R ARG .NE. 3 .AND. (INFO (4) .NE. C0056 .OR.
          1     INFO (3) .NE. FBPROG), T'O NOT1
          R
           FERRTN. (ERROR)
          R
           ATTACH. (C0056, FBPROG)
           T'O FIB (ARG)
          R
          R
          R
          R     INITIATE A NEW FIB JOB.
          R
FIB (0)    C'E
           SETPTR. (1)
           SETRUN. (0)
          R
GETJOB     BFOPEN. (R, FIBJOB, FILE, BUFF1 (431) ... 432,
          1     MZE, MZE, NAP)
           FLOC = 1
RDJOB      GETPTR. (RELLOC)
           READ. (NAP)
          R
          R     IS IT TIME TO RUN THIS JOB
          R
           TIMNOW = GTDYTM.(0)
           W'R CARD(8) .G. TIMNOW, T'O NXTJOB
          R
          R     DETERMINE IF FIB USER IS ALREADY LOGGED IN.
          R
           LUN = ISIN. (CARD (13), CARD (11))
           W'R LUN .NE. 0
                T'O NXTJOB
           E'L
          R
          R     PRINT COMMENT FOR FUTURE REFERENCE.
          R
           PRNTP. (CARD (10) )
          R
          R     SET UP COMMANDS FOR CHAINING.
          R
           LGNFIB (1) = CARD (13)
           LGNFIB (2) = CARD (12)
           LGNFIB (3) = CARD (11)
           LGNFIB (4) = CARD (9)
          R
           RUNCOM (1) = CARD (10)
          R
          R     SET COMMAND BUFFERS AND EXIT TO CHNCOM.
          R
           SCLS. (LGNFIB, 1)
           SCLS. (FIBM3, 2)
           SCLS. (RUNCOM, 3)
           SCLC. (1, 3)
           GETRUN. (FIBRUN)
           SETRUN. (FIBRUN .V. 1K)
CHN        CHNCOM. (0)
          R
          R
          R     SET POINTER FOR READING NEXT JOB.
          R
NXTJOB     RELLOC = RELLOC + 14
           FLOC = FLOC + 14
           SETPTR. (RELLOC)
           T'O RDJOB
          R
          R
          R
          R     USER IS LOGGED IN, TRY AGAIN LATER.
          R
FIB (1)    C'E
           W'R .NOT. TSTRUN. (1K), T'O FIB (0)
           GETPTR. (RELLOC)
           SETPTR. (RELLOC + 14)
           T'O GETJOB
          R
          R
          R
          R     USER'S LOGIN FAILED. DELETE JOB.
          R
FIB (2)    C'E
           W'R .NOT. TSTRUN. (1K), T'O FIB (0)
          R
           REWRT.
           T'O GETJOB
          R
          R
          R
          R     LOGIN SUCCESSFUL.  REMOVE JOB FROM FILE.
          R
FIB (3)    C'E
           W'R .NOT. TSTRUN. (1K), T'O NOT1
          R
           REWRT.
          R
           COMFL.(0)
           SETRUN.(0)
           T'O CHN
          R
          R
          R
          R
          R     NO WAITING FIB JOB, SLEEP.
          R
NAP        BFCLOS. (ALL, MZE, NAP1)
           T'O NAP2
NAP1       RESETF. (NAP2)
NAP2       W'R TSTRUN. (2K), T'O FIB (0)
           SLEEPT = SLEEPT
           SLEEP.
           T'O FIB (0)
          R
          R
          R
          R     REWRITE FIBJOB FILE.
          R
           INTERNAL FUNCTION
           E'O REWRT.
          R
           GETPTR. (RELLOC)
           BFOPEN. (RW, FIBJOB, FILE, BUFF1 (431) ... 432,
          1     MZE, MZE, ERROR)
           FLOC = 1
           READ. (RWFIN)
           BUFFER. (FIBJOB, FILE, BUFF2 (431) ... 432)
          R
RWLOOP     BFREAD. (FIBJOB, FILE, CARD (13) ... 14, RWFIN, CT, ERROR)
           WRWAIT. (FIBJOB, FILE, RELLOC, CARD (13) ... 14)
          R
           RELLOC = RELLOC + 14
           T'O RWLOOP
          R
RWFIN      TRFILE. (FIBJOB, FILE, RELLOC, TRERR)
TRERR      BFCLOS. (FIBJOB, FILE, ERROR)
          R
           F'N
           E'N
          R
          R
          R
          R     READ - READ FIBJOB FILE TO 'RELLOC'.
          R
           INTERNAL FUNCTION (EOF)
           S'L EOF
           E'O READ.
          R
RDLOOP     BFREAD. (FIBJOB, FILE, CARD (13) ... 14, EOF, CT, ERROR)
           W'R FLOC .L. RELLOC
                FLOC = FLOC + 14
                T'O RDLOOP
           E'L
          R
           F'N
           E'N
          R
          R
          R     TSTRUN - CHECK FOR BIT IN FIBRUN WORD.
          R
           INTERNAL FUNCTION (MASK)
           E'O TSTRUN.
          R
           GETRUN. (FIBRUN)
           F'N (FIBRUN .A. MASK) .NE. 0
          R
           E'N
          R
          R
          R
          R     ILLEGAL CALL TO THE FIB MONITOR.
          R
NOT1       PRNTP. (ILLEG)
           V'S ILLEG = $ ILLEGAL CALL TO FIBMON.$
          1     , 777777777777K
           T'O CHN
          R
          R
          R GETRUN, SETRUN, GETPTR, AND SETPTR
          R
           INTERNAL FUNCTION (ARG)
           E'O GETRUN.
           ARG = GLOC.(COMLOC.($FIBRUN$))
           F'N
          R
           E'O SETRUN.
           SLOC.(ARG,COMLOC.($FIBRUN$))
           F'N
          R
           E'O GETPTR.
           ARG = GLOC.(COMLOC.($FIBPTR$))
           F'N
          R
           E'O SETPTR.
           SLOC.(ARG,COMLOC.($FIBPTR$))
           F'N
          R
           E'N
          R
          R
          R     DISK ERROR.
          R
ERROR      NCOM. ($PRNTER$, -51K)
          R
          R
          R
          R
           E'M
