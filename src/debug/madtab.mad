           EXTERNAL FUNCTION(A1,A2,A3)
           NORMAL MODE IS INTEGER
           PROGRAM COMMON LIST(84)
           BOOLEAN WSEEK
          R
          RRETURN NAME FOR ABSOLUTE LOCATION 'A1' IN TRANSFER VECTOR
          R
           ENTRY TO TVNAME.
           SSETUP.
           RELLOC=A1.A.77777K-RELCON
           WHENEVER RELLOC.L.0.OR.RELLOC.G.TVEND-TVBEG, FUNCTION RETURN
          10
           FUNCTION RETURN WGET.(TVBEG+RELLOC)
          R
          RRETURN ABS.LOC.OF NAME 'A1' IN TRANSFER VECTOR
          R
           ENTRY TO TVLOC.
           SSETUP.
           THROUGH TVGET,FOR I=TVBEG,1,I.G.TVEND
TVGET      WHENEVER A1.E.WGET.(I),FUNCTION RETURN RELCON+I-TVBEG
           FUNCTION RETURN 0
          R
          RRETURN NAME OF VARIABLE AT ABSOLUTE LOCATION A1
          R
           ENTRY TO VARNAM.
           SSETUP.
           RELLOC=A1
           WHENEVER RELLOC.G.RELCON
           RELLOC=RELLOC-RELCON
           OTHERWISE
           RELLOC=RELLOC-RELCOM
           END OF CONDITIONAL
           THROUGH VNGET,FOR I=SYMBEG+1,2,I.G.SYMEND
           JUNK=WGET.(I).A.77777K
VNGET      WHENEVER JUNK.E.RELLOC,FUNCTION RETURN WGET.(I-1)
           FUNCTION RETURN $(NONE)$
          R
          RRETURN JUNK TELLING ALL ABOUT VARIABLE NAME 'A1'.
          R
           ENTRY TO SYMTAB.
           SSETUP.
           THROUGH SYMGET, FOR I=SYMBEG,2,I.G.SYMEND
           WHENEVER A1.E.WGET.(I)
           JUNK=WGET.(I+1)
           DV=(JUNK.RS.18).A.77777K
           WHENEVER DV.NE.0.AND.DV.L.VARBRK,DV=DV+RELCON
           BITS=JUNK.A.700000700000K
           LOC=JUNK.A.77777K
           WHENEVER LOC.L.VARBRK,LOC=LOC+RELCON
           JUNK=DV.LS.18.V.BITS.V.LOC
           FUNCTION RETURN JUNK
SYMGET     END OF CONDITIONAL
           FUNCTION RETURN 0
          R
          RRETURN ABS. LOC. OF FIRST INSTRUCTION GENERATED BY MAD
          RAFTER PROCESSING CARD WITH SEQUENCE NUMBER 'A1'.
          R
           ENTRY TO SNLOC.
           SSETUP.
           THROUGH SNLGET, FOR I=SEQBEG,1,I.G.SEQEND
           ENTRY=WGET.(I)
SNLGET     WHENEVER ENTRY.A.77777K.GE.A1,
          1FUNCTION RETURN ENTRY.RS.18+RELCON
           PRINT.(COM2)
           VECTOR VALUES COM2=31,$SNLOC ERROR.  CONSULT LISTINGS.$
           READY.
          R
          RRETURN SEQUENCE NUMBER OF LAST CARD PROCESSED BY MAD
          RBEFORE GENERATING INSTRUCTION IN ABS.LOC. 'A1'
          R
           ENTRY TO SNNAM.
           SSETUP.
           RELLOC=A1-RELCON
           THROUGH SNNGET,FOR I=SEQEND,-1,I.L.SEQBEG
           ENTRY=WGET.(I)
           ENTRYA=ENTRY.A.77777K
           ENTRYD=ENTRY.RS.18
SNNGET     WHENEVER ENTRYD.LE.RELLOC,FUNCTION RETURN ENTRYA
           FUNCTION RETURN 0
          R
          RSET 'A2','A3' TO THE ABS. FIRST LOC., COUNT FOR
          RPROGRAM AREA INDICATED BY 'A1'
          R
           ENTRY TO MAP.
           SSETUP.
           THROUGH GETMAP, FOR I=MAPBEG,2,I.G.MAPEND
           WHENEVER A1.E.WGET.(I)
           ENTRY=WGET.(I+1)
           A2=ENTRY.A.77777K+RELCON
           A3=ENTRY.RS.18
           FUNCTION RETURN
GETMAP     END OF CONDITIONAL
           A2=0
           A3=0
           FUNCTION RETURN
          R
          RSET 'A1','A2' TO NAME, LINEAR SUBSCRIPT OF FIRST
          RVARIABLE.
          R
           ENTRY TO FIRVAR.
           SSETUP.
           A1=FVNAME
           A2=0
           FUNCTION RETURN
          R
          RSET 'A1','A2' TO NAME, LINEAR SUBSCRIPT OF LAST
          RVARIABLE.
          R
           ENTRY TO LASVAR.
           SSETUP.
           A1=LVNAME
           A2=LVSUB
           FUNCTION RETURN
          R
          RMOVE 'A1','A2' TO POINT AT NAME, LINEAR SUBSCRIPT
          ROF NEXT VARIABLE IN ALPHABETIC, NUMERIC ORDER.
          R
           ENTRY TO NEXVAR.
           SSETUP.
           THROUGH GETNDM, FOR I=DIMBEG,2,I.G.DIMEND
           WHENEVER WGET.(I).E.A1
           NDM=WGET.(I+1).RS.18-1
           TRANSFER TO GOTNDM
GETNDM     END OF CONDITIONAL
           NDM=0
          R
GOTNDM     WHENEVER A2.L.NDM
           A2=A2+1
           FUNCTION RETURN
           END OF CONDITIONAL
          R
           A2=0
           THROUGH GETNNM,FOR I=SYMBEG,2,I.G.SYMEND
           WHENEVER WGET.(I).E.A1
           WHENEVER I+10.L.SYMEND
           A1=WGET.(I+10)
           OTHERWISE
           I=I-SYMBEG
           I=I-10*(I/10)
           A1=WGET.(SYMBEG+I+2)
           END OF CONDITIONAL
           FUNCTION RETURN
GETNNM     END OF CONDITIONAL
           PRINT.(COM1)
           VECTOR VALUES COM1=32,$NEXVAR ERROR.  CONSULT LISTINGS.$
           READY.
          R
          RRETURN DIMENSIONED LENGTH OF NAME 'S1'.
          R
           ENTRY TO DIM.
           SSETUP.
           THROUGH GETDIM, FOR I=DIMBEG,2,I.G.DIMEND
GETDIM     WHENEVER WGET.(I).E.A1,FUNCTION RETURN WGET.(I+1).RS.18-1
           FUNCTION RETURN 0
          R
          RRETURN MAXIMUM DIMENSIONED LENGTH OF ABS. LOC. 'A1'.
          R
           ENTRY TO MAXDIM.
           SSETUP.
           RELLOC=A1
           WHENEVER RELLOC.G.RELCON
           RELLOC=RELLOC-RELCON
           OTHERWISE
           RELLOC=RELLOC-RELCOM
           END OF CONDITIONAL
           MAX=1
           THROUGH GETMDM, FOR I=DIMBEG+1,2,I.G.DIMEND
           ENTRY=WGET.(I)
GETMDM     WHENEVER RELLOC.E.ENTRY.A.77777K.AND.MAX.L.ENTRY.RS.18,
          1MAX=ENTRY.RS.18
           FUNCTION RETURN MAX-1
          R
          RSET UP MADTAB IN WINDOW IF NOT ALREADY.
          R
           INTERNAL FUNCTION
           ENTRY TO SSETUP.
           WHENEVER WSEEK.($MADTAB$),FUNCTION RETURN
           GWORK.(MADTAB)
           VECTOR VALUES MADTAB=$******SYMTAB$
          R
           WHENEVER FSTAT.(MADTAB).E.0
           TRANS.(MADTAB)
           WHENEVER FSTAT.(MADTAB).E.0
           PRINT.(COM3)
           VECTOR VALUES COM3=37,$CORRECT THIS CONDITION AND TRY AGAIN.$
           READY.
           END OF CONDITIONAL
           END OF CONDITIONAL
          R
           WSETUP.($MADTAB$,MADTAB,0)
          R
           WSIZE.(SIZE)
          R
           TVBEG=0
           TVEND=-1
           SYMBEG=0
           SYMEND=-1
           DIMBEG=0
           DIMEND=-1
           THROUGH SFIND,FOR I=4,2+SCOUNT,I.G.SIZE
           SNAME=WGET.(I)
           SCOUNT=WGET.(I+1)
           BEG=I+2
           END=I+1+SCOUNT
           WHENEVER SNAME.E.$SYMBOL$
           SYMBEG=BEG
           SYMEND=END
           OR WHENEVER SNAME.E.$SEQNOS$
           SEQBEG=BEG
           SEQEND=END
           OR WHENEVER SNAME.E.$TV$
           TVBEG=BEG
           TVEND=END
           OR WHENEVER SNAME.E.$DIM$
           DIMBEG=BEG
           DIMEND=END
           OR WHENEVER SNAME.E.$MAP$
           MAPBEG=BEG
           MAPEND=END
SFIND      END OF CONDITIONAL
          R
           WHENEVER SYMBEG.NE.0
           FVNAME=WGET.(SYMBEG)
           WHENEVER SYMEND+1-SYMBEG.G.10
           LVNAME=WGET.(10*((SYMEND+1-SYMBEG)/10)+SYMBEG-2)
           OTHERWISE
           LVNAME=WGET.(SYMEND-1)
           END OF CONDITIONAL
           THROUGH LVSGET, FOR I=DIMBEG,2,I.G.DIMEND
           WHENEVER WGET.(I).E.LVNAME
           LVSUB=WGET.(I+1).RS.18-1
           TRANSFER TO LVSGOT
LVSGET     END OF CONDITIONAL
           LVSUB=0
LVSGOT     CONTINUE
           OTHERWISE
           FVNAME=$(NONE)$
           END OF CONDITIONAL
          R
           ORG.(MADTAB,RELCON,COUNT)
           ORG.($(CMMN)$,START,COUNT)
           RELCOM=START+COUNT
           WSEEK.($MADTAB$)
VBFIND     THROUGH VBFIND,FOR I=MAPBEG,2,WGET.(I).E.$VAR$
           ENTRY=WGET.(I+1)
           VARBRK=ENTRY.A.77777K+ENTRY.RS.18
           FUNCTION RETURN
           END OF FUNCTION
           END OF FUNCTION
